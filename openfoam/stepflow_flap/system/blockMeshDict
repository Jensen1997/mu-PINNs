/*--------------------------------*- C++ -*----------------------------------*\
  =========                 |
  \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
   \\    /   O peration     | Website:  https://openfoam.org
    \\  /    A nd           | Version:  10
     \\/     M anipulation  |
\*---------------------------------------------------------------------------*/
FoamFile
{
    format      ascii;
    class       dictionary;
    object      blockMeshDict;
}
// * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * //

convertToMeters 1;

vertices
(
    (0 0 0)
    (0.95 0 0)
    (0.95 0.5 0)
    (1.05 0.5 0)
    (1.05 0 0)
    (2 0 0)
    (2 0.5 0)
    (2 1 0)
    (1.05 1 0)
    (0.95 1 0)
    (0 1 0)
    (0 0.5 0)
    (0 0 0.1)
    (0.95 0 0.1)
    (0.95 0.5 0.1)
    (1.05 0.5 0.1)
    (1.05 0 0.1)
    (2 0 0.1)
    (2 0.5 0.1)
    (2 1 0.1)
    (1.05 1 0.1)
    (0.95 1 0.1)
    (0 1 0.1)
    (0 0.5 0.1)
);

blocks
(
    hex (0 1 2 11 12 13 14 23) (100 50 1) simpleGrading (0.2 0.2 1)
    hex (11 2 9 10 23 14 21 22) (100 50 1) simpleGrading (0.2 5 1)
    hex (2 3 8 9 14 15 20 21) (30 50 1) simpleGrading (1 5 1)
    hex (3 6 7 8 15 18 19 20) (100 50 1) simpleGrading (5 5 1)
    hex (4 5 6 3 16 17 18 15) (100 50 1) simpleGrading (5 0.2 1)
);

boundary
(
    INLET
    {
        type patch;
        faces
        (
            (0 12 23 11)
            (11 23 22 10)
        );
    }

    OUTLET
    {
        type patch;
        faces
        (
            (5 17 18 6)
            (6 18 19 7)
        );
    }

    UP
    {
        type wall;
        faces
        (
            (10 22 21 9)
            (9 21 20 8)
            (8 20 19 7)
        );
    }

    DOWN
    {
        type wall;
        faces
        (
            (0 12 13 1)
            (1 13 14 2)
            (2 14 15 3)
            (3 15 16 4)
            (4 16 17 5)
        );
    }

    FRONT
    {
        type empty;
        faces
        (
            (0 1 2 11)
            (11 2 9 10)
            (2 3 8 9)
            (3 6 7 8)
            (4 5 6 3)
        );
    }
    
    BACK
    {
        type empty;
        faces
        (
            (12 13 14 23)
            (23 14 21 22)
            (14 15 20 21)
            (15 18 19 20)
            (16 17 18 15)
        );
    }
);


// ************************************************************************* //
